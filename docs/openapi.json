{"openapi":"3.0.2","info":{"title":"Pi Academy API","description":"\n            \n# Introduction\n            \nA RESTFul API for **Pi Academy** project. Built with love, as well as FastAPI and PostgreSQL.\n            ","version":"1.0.0","x-logo":{"url":"./icon.svg"}},"paths":{"/":{"get":{"summary":"Status","operationId":"status__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/auth/login":{"post":{"tags":["Auth"],"summary":"User Login","description":"Upon verification of the username and password, returns signed JWT and set to cookie as 'Authorization'.\nThis token is required in subsequent api calls to identify the authorized user. The token gets expired after\n30 minutes.","operationId":"login_auth_login_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Credentials"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/logout":{"post":{"tags":["Auth"],"summary":"User Logout","description":"Removes the 'Authorization' cookie. However, the signed JWT remains valid, until it gets expired automatically.","operationId":"logout_auth_logout_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/auth/current-user":{"get":{"tags":["Auth"],"summary":"Get Current User","description":"Identifies the authorized user from the signed JWT and returns the user object.","operationId":"get_current_user_auth_current_user_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRes"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/courses/":{"get":{"tags":["Courses"],"summary":"List Available Courses","description":"Returns a list of the courses available to the user.","operationId":"get_all_courses_courses__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Courses Courses  Get","type":"array","items":{"$ref":"#/components/schemas/CourseRes"}}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]},"post":{"tags":["Courses"],"summary":"Create New Course","description":"Creates a new course. Only a curator can perform this action. Returns the created course.","operationId":"create_course_courses__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourseCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourseRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/courses/{guid}":{"get":{"tags":["Courses"],"summary":"Get a Course","description":"Returns a course identified by `guid`, if that is available to the user. Otherwise, returns 404.","operationId":"get_course_courses__guid__get","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourseRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]},"delete":{"tags":["Courses"],"summary":"Delete a Course","description":"Deletes an existing course identified by `guid`. Only a curator can perform this action.","operationId":"delete_course_courses__guid__delete","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]},"patch":{"tags":["Courses"],"summary":"Update a Course","description":"Updates an existing course identified by `guid`. Only a curator can perform this action. Returns the updated course.","operationId":"update_course_courses__guid__patch","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourseUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourseRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/discussions/":{"get":{"tags":["Discussions"],"summary":"List General Threads","description":"Returns a list of discussion-threads that are not assiciated to any enrollment.","operationId":"get_general_threads_discussions__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get General Threads Discussions  Get","type":"array","items":{"$ref":"#/components/schemas/ThreadRes"}}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]},"post":{"tags":["Discussions"],"summary":"Create New Post","description":"Creates a new post as well as a new discussion thread. Returns the discussion thread.","operationId":"create_general_thread_discussions__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DiscussionCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThreadRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/discussions/{guid}/comments":{"post":{"tags":["Discussions"],"summary":"Create New Comment","description":"Adds a comment to the post identified by `guid`. Returns the comment.","operationId":"add_comment_discussions__guid__comments_post","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DiscussionCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DiscussionRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/discussions/{guid}":{"delete":{"tags":["Discussions"],"summary":"Delete a Discussion","description":"Deletes a discussion identified by `guid`. It can be a post or a comment. In case of a post,\nall the associated comments will also be deleted.","operationId":"delete_discussion_discussions__guid__delete","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/profiles/current-user":{"get":{"tags":["Profiles"],"summary":"Get Current User Profile","description":"Returns the profile of the authorized user.","operationId":"get_current_user_profile_profiles_current_user_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileRes"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]},"patch":{"tags":["Profiles"],"summary":"Update Current User Profile","description":"Updates the profile of the authorized user. Returns the updated profile.","operationId":"update_current_user_profile_profiles_current_user_patch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/profiles/{guid}":{"get":{"tags":["Profiles"],"summary":"Get a User Profile","description":"Returns the profile of the user identified by `guid`.","operationId":"get_user_profile_profiles__guid__get","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/enrollments/":{"get":{"tags":["Enrollments"],"summary":"List User Enrollments","description":"Returns a list of enrollments for the authorized user.","operationId":"get_all_enrollments_enrollments__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Enrollments Enrollments  Get","type":"array","items":{"$ref":"#/components/schemas/EnrollmentRes"}}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/enrollments/{guid}/details":{"get":{"tags":["Enrollments"],"summary":"Get Enrollment Details","description":"Returns detailed info of the enrollment identified by `guid`. If the enrollment does not belong to the\nauthorized user, it returns 404.","operationId":"get_enrollment_detail_enrollments__guid__details_get","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnrollmentDetailsRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/enrollments/{guid}/discussions":{"get":{"tags":["Enrollments"],"summary":"List Enrollment Threads","description":"Returns list of discussion threads of the enrollment identified by `guid`. If the enrollment does not belong to the\nauthorized user, it returns 404.","operationId":"get_enrollment_threads_enrollments__guid__discussions_get","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get Enrollment Threads Enrollments  Guid  Discussions Get","type":"array","items":{"$ref":"#/components/schemas/ThreadRes"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]},"post":{"tags":["Enrollments"],"summary":"Create New Post in Enrollment","description":"Creates a new post as well as a new discussion thread in the enrollment identified by `guid`. If the enrollment\ndoes not belong to the authorized user, it returns 404. Else, returns the created thread.","operationId":"create_enrollment_threads_enrollments__guid__discussions_post","parameters":[{"required":true,"schema":{"title":"Guid","type":"string"},"name":"guid","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DiscussionCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThreadRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}},"/events/":{"get":{"tags":["Events"],"summary":"List User Events","description":"Returns a list of all events where the authorized user is among the target audience.","operationId":"get_all_events_events__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Events Events  Get","type":"array","items":{"$ref":"#/components/schemas/EventRes"}}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]},"post":{"tags":["Events"],"summary":"Create New Event","description":"Creates a new event. Can only be performed by a professor. Returns the created event.","operationId":"create_event_events__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EventRes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearerCookie":[]}]}}},"components":{"schemas":{"CourseCreate":{"title":"CourseCreate","required":["code","title","description"],"type":"object","properties":{"code":{"title":"Provide a unique short-hand for the course.","type":"string","description":"Ex: ML-101"},"title":{"title":"What is the course title?","type":"string","description":"Ex: Introduction to Machine Learning"},"description":{"title":"Provide detailed description.","type":"string"},"outlines":{"title":"Provide the workflow of the course.","type":"array","items":{"type":"string"},"default":[]},"tags":{"title":"Set some tags to utilize in recommendation system.","type":"array","items":{"type":"string"},"default":[]},"takeaways":{"title":"What are the things that a student will learn from the course?","type":"array","items":{"type":"string"},"default":[]}}},"CourseRes":{"title":"CourseRes","required":["guid","created_at","updated_at","code","title","description","outlines","tags","takeaways"],"type":"object","properties":{"guid":{"title":"Globally unique identifier of the object.","type":"string"},"created_at":{"title":"Object creation timestamp.","type":"string","format":"date-time"},"updated_at":{"title":"Object last modification timestamp.","type":"string","format":"date-time"},"code":{"title":"Unique short-hand of the course.","type":"string","description":"Ex: ML-101"},"title":{"title":"Title of the course.","type":"string","description":"Ex: Introduction to Machine Learning"},"description":{"title":"Detailed course description.","type":"string"},"outlines":{"title":"Workflow of the course.","type":"array","items":{"type":"string"}},"tags":{"title":"Tags, useful in recommendation.","type":"array","items":{"type":"string"}},"takeaways":{"title":"Knowledge offered by the course.","type":"array","items":{"type":"string"}}}},"CourseUpdate":{"title":"CourseUpdate","type":"object","properties":{"code":{"title":"Provide a unique short-hand for the course.","type":"string","description":"Ex: ML-101"},"title":{"title":"What is the course title?","type":"string","description":"Ex: Introduction to Machine Learning"},"description":{"title":"Provide detailed description.","type":"string"},"outlines":{"title":"Provide the workflow of the course.","type":"array","items":{"type":"string"},"default":[]},"tags":{"title":"Set some tags to utilize in recommendation system.","type":"array","items":{"type":"string"},"default":[]},"takeaways":{"title":"What are the things that a student will learn from the course?","type":"array","items":{"type":"string"},"default":[]}}},"Credentials":{"title":"Credentials","required":["username","password"],"type":"object","properties":{"username":{"title":"Username","type":"string"},"password":{"title":"Password","type":"string"}}},"DiscussionCreate":{"title":"DiscussionCreate","required":["body"],"type":"object","properties":{"body":{"title":"What do you want to say?","type":"string"}}},"DiscussionRes":{"title":"DiscussionRes","required":["guid","created_at","updated_at","body","author"],"type":"object","properties":{"guid":{"title":"Globally unique identifier of the object.","type":"string"},"created_at":{"title":"Object creation timestamp.","type":"string","format":"date-time"},"updated_at":{"title":"Object last modification timestamp.","type":"string","format":"date-time"},"body":{"title":"Text content.","type":"string"},"author":{"title":"Author of the text content.","allOf":[{"$ref":"#/components/schemas/UserRes"}]}}},"EnrollmentDetailsRes":{"title":"EnrollmentDetailsRes","required":["guid","created_at","updated_at","status","instructors","members","course"],"type":"object","properties":{"guid":{"title":"Globally unique identifier of the object.","type":"string"},"created_at":{"title":"Object creation timestamp.","type":"string","format":"date-time"},"updated_at":{"title":"Object last modification timestamp.","type":"string","format":"date-time"},"status":{"title":"Current status of the enrollment.","type":"string"},"instructors":{"title":"List of professors instructing this course.","type":"array","items":{"$ref":"#/components/schemas/UserRes"}},"members":{"title":"List of students participating in this course.","type":"array","items":{"$ref":"#/components/schemas/UserRes"}},"course":{"title":"The course","allOf":[{"$ref":"#/components/schemas/CourseRes"}]}}},"EnrollmentRes":{"title":"EnrollmentRes","required":["guid","created_at","updated_at","code","title"],"type":"object","properties":{"guid":{"title":"Globally unique identifier of the object.","type":"string"},"created_at":{"title":"Object creation timestamp.","type":"string","format":"date-time"},"updated_at":{"title":"Object last modification timestamp.","type":"string","format":"date-time"},"code":{"title":"Enrollment's course-code","type":"string"},"title":{"title":"Enrollment's course-title","type":"string"}}},"EventCreate":{"title":"EventCreate","required":["title"],"type":"object","properties":{"title":{"title":"What is the event title?","type":"string"},"subtitle":{"title":"Extra bit of info apart from the title.","type":"string"},"type":{"title":"What is the event type?","type":"string","description":"One of `notice` `test` `test_result`","default":"notice"},"schedule":{"title":"When does the event takes place?","type":"string","format":"date-time"},"enrollment_guid":{"title":"Associate the event to a specific enrollment only.","type":"string"}}},"EventRes":{"title":"EventRes","required":["guid","created_at","updated_at","title","subtitle","type","schedule"],"type":"object","properties":{"guid":{"title":"Globally unique identifier of the object.","type":"string"},"created_at":{"title":"Object creation timestamp.","type":"string","format":"date-time"},"updated_at":{"title":"Object last modification timestamp.","type":"string","format":"date-time"},"title":{"title":"Title of the event.","type":"string"},"subtitle":{"title":"Extra bit of info apart from the title.","type":"string"},"type":{"title":"Type of the event","type":"string","description":"One of `notice` `test` `test_result`"},"schedule":{"title":"Event schedule.","type":"string","format":"date-time"}}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"ProfileRes":{"title":"ProfileRes","required":["guid","created_at","updated_at","bio","email","interests"],"type":"object","properties":{"guid":{"title":"Globally unique identifier of the object.","type":"string"},"created_at":{"title":"Object creation timestamp.","type":"string","format":"date-time"},"updated_at":{"title":"Object last modification timestamp.","type":"string","format":"date-time"},"bio":{"title":"Short intro of the user.","type":"string"},"email":{"title":"Email address","type":"string"},"interests":{"title":"Topics that attracts the user.","type":"array","items":{"type":"string"}}}},"ThreadRes":{"title":"ThreadRes","required":["guid","created_at","updated_at","post","comments"],"type":"object","properties":{"guid":{"title":"Globally unique identifier of the object.","type":"string"},"created_at":{"title":"Object creation timestamp.","type":"string","format":"date-time"},"updated_at":{"title":"Object last modification timestamp.","type":"string","format":"date-time"},"post":{"title":"The first discussion of the conversation.","allOf":[{"$ref":"#/components/schemas/DiscussionRes"}]},"comments":{"title":"Subsequent discussions of the conversation.","type":"array","items":{"$ref":"#/components/schemas/DiscussionRes"}}}},"Token":{"title":"Token","required":["access_token","token_type"],"type":"object","properties":{"access_token":{"title":"Signed JWT. Must be in the request cookie for authorization.","type":"string"},"token_type":{"title":"Token type.","type":"string","description":"Ex: Bearer."}}},"UserRes":{"title":"UserRes","required":["guid","created_at","updated_at","name","username","category"],"type":"object","properties":{"guid":{"title":"Globally unique identifier of the object.","type":"string"},"created_at":{"title":"Object creation timestamp.","type":"string","format":"date-time"},"updated_at":{"title":"Object last modification timestamp.","type":"string","format":"date-time"},"name":{"title":"Full name of the user","type":"string"},"avatar":{"title":"User's avatar url.","type":"string"},"username":{"title":"Username","type":"string"},"category":{"title":"Category of the user","type":"string","description":"One of `student` `professor` `admin` `curator`"}}},"UserUpdate":{"title":"UserUpdate","type":"object","properties":{"bio":{"title":"Describe yourself.","type":"string","description":"Ex: I come from a village loong looong way from..."},"email":{"title":"What is your email address?","type":"string"},"interests":{"title":"What are you interested in?","type":"array","items":{"type":"string"}}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"type":"string"}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}},"securitySchemes":{"OAuth2PasswordBearerCookie":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"auth/login"}}}}},"tags":[{"name":"Auth","description":"\n        \nPi Academy API relies on OAuth2 for authorization. The auth token is read from request cookie. The following set of\n        endpoints take care of login related stuffs.\n        "},{"name":"Courses","description":"\n        \nThis set of endpoints are for listing, adding and removing courses to the database. A course can be added/removed by a\n        *Curator*. However, all the users can read the course list.\n        "},{"name":"Discussions","description":"\n        \nDiscussions are mainly conversation threads. But each post and comment is considered a single discussion.\n        This set of endpoints are responsible for listing, adding, deleting and updating threads, posts and comments.\n        "},{"name":"Enrollments","description":"\n        \nAn *enrollment* is an instance of a course. Each enrollment has a limited timeframe and a closed boundary consisting of a\n        set of users. There are two types of users in an enrollment:\n        \n- Professors\n        \n- Students\n        \nProfessors are considered admins of the enrollment. They can add/remove users as well as post notices and moderate conversations.\n        "},{"name":"Events","description":"\n        \nThere are three types of events:\n        \n- **Notice**: To informs audiences a general info across the platform.\n        \n- **Test**: To inform students of an enrollment about an upcoming exam. Enrollment specific event.\n        \n- **Test Result**: To inform a student the outcome of a past exam. User specific event.\n        "},{"name":"Profiles","description":"\n        \nThese set of endpoints serve profile of a user, as well as update logged-in user's info.\n        "}],"x-tagGroups":[{"name":"General","tags":["Auth","Courses","Discussions","Enrollments","Events","Profiles"]}]}